name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: testing
    env:
      DATABASE_HOST: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USER: ${{ secrets.DATABASE_USERNAME }}
      OPEN_API_KEY: ${{ secrets.OPEN_API_KEY }}
      PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_ENV: ${{ secrets.DJANGO_ENV }}
      LOGGING_FILE_LOCATION: ${{ secrets.LOGGING_FILE_LOCATION }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      RABBIT_MQ_BROKER_URL: ${{secrets.RABBIT_MQ_BROKER_URL}}
      BROKER_HOST: ${{secrets.BROKER_HOST}}
      BROKER_PORT: ${{secrets.BROKER_PORT}}
      BROKER_VHOST: ${{secrets.BROKER_VHOST}}

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}
          POSTGRES_USER: ${{secrets.DATABASE_USERNAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      rabbitmq:
        image: rabbitmq
        ports:
          - 5672
        env:
          RABBITMQ_DEFAULT_USER: ${{secrets.BROKER_USERNAME}}
          RABBITMQ_DEFAULT_PASS: ${{secrets.BROKER_PASSWORD}}
          RABBITMQ_DEFAULT_VHOST: ${{secrets.BROKER_VHOST}}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: 3.12
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test
    - name: Run Migrations
      run: python manage.py migrate
    - name: Collect Static
      run: |
        python manage.py collectstatic --noinput
    - name: Run Celery workers
      run: celery -A MCQ_Generator worker -l INFO
